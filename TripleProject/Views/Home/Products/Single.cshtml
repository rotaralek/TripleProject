@model TripleProject.Areas.Admin.Models.Product

@{
    ViewData["Title"] = Model.Title;
}

<div class="pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">@Model.Title</h1>
</div>

<div class="row">
    <div class="col-md-5 mb-3">
        <div class="carousel slide" data-ride="carousel" id="carousel-controls">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <div class="square-image" style="background-image: url(@Model.Image.Path)"></div>
                </div>

                @await Component.InvokeAsync("Carousel", Model.GalleryId)
            </div>

            @{
                List<int> galleryList = new List<int>();
                galleryList = Model.GalleryId.Split(";").Select(Int32.Parse).ToList();
            }

            <ul class="carousel-indicators">
                <li data-target="#carousel-controls" data-slide-to="0" class="active"></li>

                @{
                    int galleryListCounter = 1;
                }

                @foreach (int galleryItem in galleryList)
                {
                    <li data-target="#carousel-controls" data-slide-to="@galleryListCounter"></li>
                    galleryListCounter++;
                }
            </ul>

            <a class="carousel-control-prev" href="#carousel-controls" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>

            <a class="carousel-control-next" href="#carousel-controls" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>

    <div class="col-md-7 mb-3">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Price)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Price)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Quantity)
            </dt>
            <dd>
                <input type="number" name="Quantity" min="1" max="@Model.Quantity" value="1" />
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Catalog)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Catalog.Name)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Attribute)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Attribute.Name)
            </dd>
        </dl>
    </div>
</div>

<nav>
    <ul class="nav nav-tabs mb-3" id="nav-tab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="nav-description-tab" data-toggle="tab" href="#nav-description" role="tab" aria-controls="nav-description" aria-selected="true">@Html.DisplayNameFor(model => model.Description)</a>
        </li>

        <li class="nav-item">
            <a class="nav-link" id="nav-text-tab" data-toggle="tab" href="#nav-text" role="tab" aria-controls="nav-text" aria-selected="false">@Html.DisplayNameFor(model => model.Text)</a>
        </li>
    </ul>
</nav>

<div class="tab-content mb-3" id="nav-tabContent">
    <div class="tab-pane fade show active" id="nav-description" role="tabpanel" aria-labelledby="nav-description-tab">
        @Html.DisplayFor(model => model.Description)
    </div>

    <div class="tab-pane fade" id="nav-text" role="tabpanel" aria-labelledby="nav-text-tab">
        @Html.DisplayFor(model => model.Text)
    </div>
</div>
