@model IEnumerable<TripleProject.Areas.Admin.Models.Catalog>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer

@{
    ViewData["Title"] = SharedLocalizer["Catalogs"];
}

<div class="pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">@ViewData["Title"]</h1>
</div>

<p>
    <a asp-action="Create" class="btn btn-primary">@SharedLocalizer["Create New"]</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Parent)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            if (item.ParentId == null)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Parent.Name)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">@SharedLocalizer["Edit"]</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">@SharedLocalizer["Details"]</a> |
                        <a asp-area="" asp-controller="Home" asp-action="ProductsCatalog" asp-route-id="@item.Id">@SharedLocalizer["View"]</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">@SharedLocalizer["Delete"]</a>
                    </td>
                </tr>
                @foreach (var subItem in Model)
                {
                    if (item.Id == subItem.ParentId)
                    {
                        <tr>
                            <td class="pl-4">
                                @Html.DisplayFor(modelItem => subItem.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => subItem.Parent.Name)
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@subItem.Id">@SharedLocalizer["Edit"]</a> |
                                <a asp-action="Details" asp-route-id="@subItem.Id">@SharedLocalizer["Details"]</a> |
                                <a asp-area="" asp-controller="Home" asp-action="ProductsCatalog" asp-route-id="@item.Id">@SharedLocalizer["View"]</a> |
                                <a asp-action="Delete" asp-route-id="@subItem.Id">@SharedLocalizer["Delete"]</a>
                            </td>
                        </tr>
                        @foreach (var subSubItem in Model)
                        {
                            if (subItem.Id == subSubItem.ParentId)
                            {
                                <tr>
                                    <td class="pl-5">
                                        @Html.DisplayFor(modelItem => subSubItem.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => subSubItem.Parent.Name)
                                    </td>
                                    <td>
                                        <a asp-action="Edit" asp-route-id="@subSubItem.Id">@SharedLocalizer["Edit"]</a> |
                                        <a asp-action="Details" asp-route-id="@subSubItem.Id">@SharedLocalizer["Details"]</a> |
                                        <a asp-area="" asp-controller="Home" asp-action="ProductsCatalog" asp-route-id="@item.Id">@SharedLocalizer["View"]</a> |
                                        <a asp-action="Delete" asp-route-id="@subSubItem.Id">@SharedLocalizer["Delete"]</a>
                                    </td>
                                </tr>
                            }
                        }
                    }
                }
            }
        }
    </tbody>
</table>

@{
    int count = (int)ViewData["count"];
    int page = (int)ViewData["page"];
    decimal itemsPerPage = (int)ViewData["itemsPerPage"];
}

@await Component.InvokeAsync("Pagination", new { count, page, itemsPerPage })
