@inject SignInManager<IdentityUser> SignInManager
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="nav flex-column nav-pills">
    <a asp-page="./Index" class="nav-link @ManageNavPages.IndexNavClass(ViewContext)">@SharedLocalizer["Profile"]</a>
    <a id="change-password" asp-page="./ChangePassword" class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)">@SharedLocalizer["Password"]</a>
    @if (hasExternalLogins)
    {
    <a id="external-login" asp-page="./ExternalLogins" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)">@SharedLocalizer["External logins"]</a>
    }
    <a asp-page="./TwoFactorAuthentication" class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)">@SharedLocalizer["Two-factor authentication"]</a>
    <a asp-page="./PersonalData" class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)">@SharedLocalizer["Personal data"]</a>
</div>
